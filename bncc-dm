{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "38829993",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-12-15T06:13:40.532367Z",
     "iopub.status.busy": "2024-12-15T06:13:40.532054Z",
     "iopub.status.idle": "2024-12-15T06:13:41.348653Z",
     "shell.execute_reply": "2024-12-15T06:13:41.347769Z"
    },
    "jupyter": {
     "source_hidden": true
    },
    "papermill": {
     "duration": 0.824011,
     "end_time": "2024-12-15T06:13:41.350278",
     "exception": false,
     "start_time": "2024-12-15T06:13:40.526267",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/used-cars-for-sale/used_cars_prices (cleaned).csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "60b237f8",
   "metadata": {
    "papermill": {
     "duration": 0.003088,
     "end_time": "2024-12-15T06:13:41.357084",
     "exception": false,
     "start_time": "2024-12-15T06:13:41.353996",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "Introduction to Dataset\n",
    "\n",
    "\n",
    "Dataset \"used_cars_prices.csv\" adalah kumpulan data yang berisi informasi mengenai harga dan spesifikasi mobil bekas yang tersedia di marketplace Amerika Serikat. Dataset ini terdiri dari 59 kolom, yang mencakup berbagai informasi penting tentang mobil, seperti harga, tahun produksi, spesifikasi teknis, dan catatan riwayat penggunaan. Dataset ini diposting oleh \"beridzeg45\" di Kaggle.\n",
    "\n",
    "Dari dataset ini, kita akan membuat model yang ditugaskan untuk mempredisksi harga sebuah mobil bekas, dari spesifikasi dan riwayat penggunaanya."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b076d872",
   "metadata": {
    "papermill": {
     "duration": 0.003095,
     "end_time": "2024-12-15T06:13:41.363350",
     "exception": false,
     "start_time": "2024-12-15T06:13:41.360255",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ae1dc597",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-15T06:13:41.371924Z",
     "iopub.status.busy": "2024-12-15T06:13:41.371542Z",
     "iopub.status.idle": "2024-12-15T06:13:43.059377Z",
     "shell.execute_reply": "2024-12-15T06:13:43.058652Z"
    },
    "papermill": {
     "duration": 1.69387,
     "end_time": "2024-12-15T06:13:43.061255",
     "exception": false,
     "start_time": "2024-12-15T06:13:41.367385",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from sklearn.impute import SimpleImputer\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "from sklearn.ensemble import RandomForestRegressor\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44614a97",
   "metadata": {
    "papermill": {
     "duration": 0.003198,
     "end_time": "2024-12-15T06:13:43.068146",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.064948",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Mengimport/menulis library-library yang akan digunakan dalam project"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "440b2d6d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-15T06:13:43.076070Z",
     "iopub.status.busy": "2024-12-15T06:13:43.075659Z",
     "iopub.status.idle": "2024-12-15T06:13:43.185984Z",
     "shell.execute_reply": "2024-12-15T06:13:43.185200Z"
    },
    "papermill": {
     "duration": 0.116052,
     "end_time": "2024-12-15T06:13:43.187389",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.071337",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Manufacturer</th>\n",
       "      <th>Year</th>\n",
       "      <th>Price (USD)</th>\n",
       "      <th>MPG MIN</th>\n",
       "      <th>MPG MAX</th>\n",
       "      <th>Engine Volume (L)</th>\n",
       "      <th>Mileage</th>\n",
       "      <th>Accidents or damage</th>\n",
       "      <th>1-owner vehicle</th>\n",
       "      <th>Personal use only</th>\n",
       "      <th>...</th>\n",
       "      <th>Seller Reviews Count</th>\n",
       "      <th>Car Rating</th>\n",
       "      <th>Car Reviews Count</th>\n",
       "      <th>Car Recommendation Rate</th>\n",
       "      <th>Car Comfort Rating</th>\n",
       "      <th>Car Interior Rating</th>\n",
       "      <th>Car Performance Rating</th>\n",
       "      <th>Car Value Rating</th>\n",
       "      <th>Car Exterior Rating</th>\n",
       "      <th>Car Reliability Rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Hyundai</td>\n",
       "      <td>2022.0</td>\n",
       "      <td>29691.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.5</td>\n",
       "      <td>36007.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>855.0</td>\n",
       "      <td>4.2</td>\n",
       "      <td>37.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>4.2</td>\n",
       "      <td>4.1</td>\n",
       "      <td>4.3</td>\n",
       "      <td>3.7</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MINI</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>9500.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>104753.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>17.0</td>\n",
       "      <td>4.8</td>\n",
       "      <td>12.0</td>\n",
       "      <td>91.0</td>\n",
       "      <td>4.8</td>\n",
       "      <td>4.7</td>\n",
       "      <td>4.9</td>\n",
       "      <td>4.6</td>\n",
       "      <td>4.9</td>\n",
       "      <td>4.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Mitsubishi</td>\n",
       "      <td>2022.0</td>\n",
       "      <td>20999.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>60922.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>513.0</td>\n",
       "      <td>4.6</td>\n",
       "      <td>9.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>4.6</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.6</td>\n",
       "      <td>4.6</td>\n",
       "      <td>4.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FIAT</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>5999.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>78996.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>124.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>4.2</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.4</td>\n",
       "      <td>4.7</td>\n",
       "      <td>4.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Jeep</td>\n",
       "      <td>2023.0</td>\n",
       "      <td>26304.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>1.3</td>\n",
       "      <td>1075.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>324.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 59 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Manufacturer    Year  Price (USD)  MPG MIN  MPG MAX  Engine Volume (L)  \\\n",
       "0      Hyundai  2022.0      29691.0      NaN      NaN                2.5   \n",
       "1         MINI  2016.0       9500.0     25.0     35.0                1.5   \n",
       "2   Mitsubishi  2022.0      20999.0     25.0     26.0                1.5   \n",
       "3         FIAT  2013.0       5999.0     31.0     34.0                1.4   \n",
       "4         Jeep  2023.0      26304.0     23.0     29.0                1.3   \n",
       "\n",
       "    Mileage  Accidents or damage  1-owner vehicle  Personal use only  ...  \\\n",
       "0   36007.0                  1.0              1.0                1.0  ...   \n",
       "1  104753.0                  0.0              0.0                1.0  ...   \n",
       "2   60922.0                  0.0              1.0                0.0  ...   \n",
       "3   78996.0                  0.0              0.0                1.0  ...   \n",
       "4    1075.0                  0.0              0.0                0.0  ...   \n",
       "\n",
       "   Seller Reviews Count  Car Rating  Car Reviews Count  \\\n",
       "0                 855.0         4.2               37.0   \n",
       "1                  17.0         4.8               12.0   \n",
       "2                 513.0         4.6                9.0   \n",
       "3                   4.0         4.5              124.0   \n",
       "4                 324.0         5.0                2.0   \n",
       "\n",
       "   Car Recommendation Rate  Car Comfort Rating  Car Interior Rating  \\\n",
       "0                     75.0                 4.2                  4.1   \n",
       "1                     91.0                 4.8                  4.7   \n",
       "2                     88.0                 4.6                  4.4   \n",
       "3                     88.0                 4.2                  4.5   \n",
       "4                    100.0                 5.0                  5.0   \n",
       "\n",
       "   Car Performance Rating  Car Value Rating  Car Exterior Rating  \\\n",
       "0                     4.3               3.7                  4.5   \n",
       "1                     4.9               4.6                  4.9   \n",
       "2                     4.4               4.6                  4.6   \n",
       "3                     4.4               4.4                  4.7   \n",
       "4                     4.5               5.0                  5.0   \n",
       "\n",
       "   Car Reliability Rating  \n",
       "0                     4.2  \n",
       "1                     4.7  \n",
       "2                     4.3  \n",
       "3                     4.4  \n",
       "4                     5.0  \n",
       "\n",
       "[5 rows x 59 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"/kaggle/input/used-cars-for-sale/used_cars_prices (cleaned).csv\")\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dec328c7",
   "metadata": {
    "papermill": {
     "duration": 0.004102,
     "end_time": "2024-12-15T06:13:43.195143",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.191041",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "kita dapat memanggil variabel df, dan menggunakan function .head() untuk mengoutput hanya 5 data pertama hanya untuk memastikan file csv telah terbaca dan dimasukan ke dalam variabel df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c3a6a24",
   "metadata": {
    "papermill": {
     "duration": 0.003195,
     "end_time": "2024-12-15T06:13:43.201908",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.198713",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "menggunakan function read_csv dari library pandas untuk membaca dan mengolah data dari dataset yang berformat csv, dan memasukanya ke dalam variabel df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "db2fca3c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-15T06:13:43.209914Z",
     "iopub.status.busy": "2024-12-15T06:13:43.209591Z",
     "iopub.status.idle": "2024-12-15T06:13:43.222178Z",
     "shell.execute_reply": "2024-12-15T06:13:43.221120Z"
    },
    "papermill": {
     "duration": 0.018729,
     "end_time": "2024-12-15T06:13:43.223925",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.205196",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(8635, 59)\n",
      "6548\n",
      "64634\n",
      "----------------------------------------------\n",
      "Manufacturer                         8.118124\n",
      "Year                                 8.118124\n",
      "Price (USD)                          8.141285\n",
      "MPG MIN                             16.815287\n",
      "MPG MAX                             16.815287\n",
      "Engine Volume (L)                   18.355530\n",
      "Mileage                              8.118124\n",
      "Accidents or damage                  9.322525\n",
      "1-owner vehicle                      9.739433\n",
      "Personal use only                    9.322525\n",
      "Adaptive Cruise Control             26.079907\n",
      "Autopilot                           26.079907\n",
      "Cooled Seats                        26.079907\n",
      "Heated Seats                        26.079907\n",
      "Heated Steering Wheel               26.079907\n",
      "Keyless Start                       26.079907\n",
      "Navigation System                   26.079907\n",
      "Power Liftgate                      26.079907\n",
      "Remote Start                        26.079907\n",
      "Automatic Emergency Braking         14.580197\n",
      "Backup Camera                       14.580197\n",
      "Blind Spot Monitor                  14.580197\n",
      "Brake Assist                        14.580197\n",
      "LED Headlights                      14.580197\n",
      "Lane Departure Warning              14.580197\n",
      "Rear Cross Traffic Alert            14.580197\n",
      "Stability Control                   14.580197\n",
      "Alloy Wheels                        16.386798\n",
      "Moonroof                            16.386798\n",
      "Sunroof/Moonroof                    16.386798\n",
      "Tow Hitch                           16.386798\n",
      "Tow Hooks                           16.386798\n",
      "Drivetrain_AWD                       0.000000\n",
      "Drivetrain_FWD                       0.000000\n",
      "Drivetrain_RWD                       0.000000\n",
      "Fuel type_Compressed Natural Gas     0.000000\n",
      "Fuel type_Diesel                     0.000000\n",
      "Fuel type_Diesel fuel type           0.000000\n",
      "Fuel type_E85 Flex Fuel              0.000000\n",
      "Fuel type_Gasoline                   0.000000\n",
      "Fuel type_Gasoline / Natural Gas     0.000000\n",
      "Fuel type_Gasoline fuel type         0.000000\n",
      "Fuel type_Hybrid                     0.000000\n",
      "Fuel type_Other                      0.000000\n",
      "Fuel type_Plug-In Hybrid             0.000000\n",
      "Transmission_Automatic               0.000000\n",
      "Transmission_CVT                     0.000000\n",
      "Transmission_Manual                  0.000000\n",
      "Seller Rating                       46.612623\n",
      "Seller Reviews Count                28.685582\n",
      "Car Rating                          13.410539\n",
      "Car Reviews Count                   16.618413\n",
      "Car Recommendation Rate             16.537348\n",
      "Car Comfort Rating                  13.410539\n",
      "Car Interior Rating                 13.410539\n",
      "Car Performance Rating              13.410539\n",
      "Car Value Rating                    13.410539\n",
      "Car Exterior Rating                 13.410539\n",
      "Car Reliability Rating              13.433700\n",
      "dtype: float64\n",
      "----------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "totalData = df.shape\n",
    "cekNull = df.isnull().any(axis=1).sum()\n",
    "totalDataNull = df.isnull().sum().sum()\n",
    "persentaseNull = df.isnull().mean() * 100\n",
    "print(totalData)\n",
    "print(cekNull)\n",
    "print(totalDataNull)\n",
    "print(\"----------------------------------------------\")\n",
    "print(persentaseNull)\n",
    "print(\"----------------------------------------------\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "abe200f4",
   "metadata": {
    "papermill": {
     "duration": 0.003334,
     "end_time": "2024-12-15T06:13:43.231189",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.227855",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "totalData = df.shape berfungsi untuk memberikan kita dimensi dari dataset, \n",
    "Total Data: (8635, 59) berarti dataset kita memiliki 59 kolom, dan 8635 baris/total data. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46096820",
   "metadata": {
    "papermill": {
     "duration": 0.003394,
     "end_time": "2024-12-15T06:13:43.238084",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.234690",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "cekNull = df.isnull().sum() berfungsi untuk mengembalikan ada berapa data(row) yang memiliki setidaknya satu atribut tidak lengkap(column) atau null"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ee09934",
   "metadata": {
    "papermill": {
     "duration": 0.003417,
     "end_time": "2024-12-15T06:13:43.245154",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.241737",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "totalDataNull = df.isnull().sum().sum() berfungsi untuk mengembalikan nilai total dari semua value yang memiliki nilai null\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e528a450",
   "metadata": {
    "papermill": {
     "duration": 0.003367,
     "end_time": "2024-12-15T06:13:43.252103",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.248736",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "persentaseNull berfungsi untuk menampilkan persentase data/values bernilai null untuk setiap kolom, fungsinya adalah supaya kita bisa menentukan metode paling tepat untuk mengolah data yang memiliki nilai null"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "808d366a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-15T06:13:43.260670Z",
     "iopub.status.busy": "2024-12-15T06:13:43.260316Z",
     "iopub.status.idle": "2024-12-15T06:13:43.346551Z",
     "shell.execute_reply": "2024-12-15T06:13:43.345752Z"
    },
    "papermill": {
     "duration": 0.092337,
     "end_time": "2024-12-15T06:13:43.348046",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.255709",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kolomBinary = df.select_dtypes(include=['object', 'bool']).columns \n",
    "kolomKontinu = df.select_dtypes(include=['float64', 'int64']).columns\n",
    "\n",
    "imputBinary = SimpleImputer(strategy='most_frequent') \n",
    "df[kolomBinary] = imputBinary.fit_transform(df[kolomBinary])\n",
    "\n",
    "imputKontinu = SimpleImputer(strategy='median')\n",
    "df[kolomKontinu] = imputKontinu.fit_transform(df[kolomKontinu])\n",
    "\n",
    "df.dropna(subset=['Seller Rating', 'Seller Reviews Count'], inplace=True)\n",
    "\n",
    "totalDataNull = df.isnull().sum().sum()\n",
    "totalDataNull\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d292a1ef",
   "metadata": {
    "papermill": {
     "duration": 0.003569,
     "end_time": "2024-12-15T06:13:43.355614",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.352045",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Kolom dengan nilai NULL dan berbentuk biner (1/0) akan diimputasi menggunakan modus dari dataset.\n",
    "\n",
    "Kolom dengan nilai NULL dan berbentuk kontinu (seperti Mileage, Engine Volume, dll.) akan diimputasi menggunakan median (nilai tengah).\n",
    "\n",
    "Kolom dengan persentase nilai NULL yang tinggi akan didrop (Seller Rating & Seller Reviews Count)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "70775805",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-15T06:13:43.364469Z",
     "iopub.status.busy": "2024-12-15T06:13:43.364159Z",
     "iopub.status.idle": "2024-12-15T06:13:43.468707Z",
     "shell.execute_reply": "2024-12-15T06:13:43.467816Z"
    },
    "papermill": {
     "duration": 0.112197,
     "end_time": "2024-12-15T06:13:43.471627",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.359430",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "r2: 0.7214182871922807\n"
     ]
    }
   ],
   "source": [
    "X=df.drop(columns='Price (USD)')\n",
    "\n",
    "y=df['Price (USD)']\n",
    "\n",
    "X_encoded = pd.get_dummies(X, drop_first=True)\n",
    "X_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size=0.2, random_state=42)\n",
    "\n",
    "model = LinearRegression()\n",
    "\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "y_pred = model.predict(X_test)\n",
    "\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f\"r2: {r2}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92320072",
   "metadata": {
    "papermill": {
     "duration": 0.015522,
     "end_time": "2024-12-15T06:13:43.498847",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.483325",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "X = df.drop(columns='Price (USD)'): Mengambil semua kolom data kecuali kolom Price (USD) yang akan diprediksi\n",
    "\n",
    "y = df['Price (USD)']: Mengambil kolom Price (USD) sebagai target atau yang ingin diprediksi (y)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f947ca7",
   "metadata": {
    "papermill": {
     "duration": 0.01194,
     "end_time": "2024-12-15T06:13:43.522634",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.510694",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "X_encoded = pd.get_dummies(X, drop_first=True): Mengubah data kategori (seperti merk mobil, jenis bahan bakar, dll.) menjadi angka (0 atau 1) dengan get_dummies agar dapat diproses oleh model\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36ae7dd0",
   "metadata": {
    "papermill": {
     "duration": 0.011775,
     "end_time": "2024-12-15T06:13:43.546688",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.534913",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size=0.2, random_state=42): Membuat model dengan 80/20 atau 80% data akan digunakan untuk training dan 20%nya akan digunakan untuk menguji data. random state = 42 \n",
    "\n",
    "Membagi data menjadi dua bagian: 80% untuk pelatihan dan 20% untuk pengujian.\n",
    "\n",
    "random_state=42 berfungsi untuk mengassign sebuah value agar hasil setiap kali code dijalankan sama"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d008fcf",
   "metadata": {
    "papermill": {
     "duration": 0.008596,
     "end_time": "2024-12-15T06:13:43.567283",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.558687",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "model = LinearRegression(): Membuat model regresi linier\n",
    "\n",
    "model.fit(X_train, y_train): Melatih model menggunakan data pelatihan.\n",
    "\n",
    "y_pred = model.predict(X_test): Menggunakan model yang sudah dilatih untuk memprediksi harga mobil pada data pengujian."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e929560",
   "metadata": {
    "papermill": {
     "duration": 0.005742,
     "end_time": "2024-12-15T06:13:43.581965",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.576223",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "plt.scatter(y_test, y_pred) Berfungsi untuk memetakan nilai aktual dan nilai prediksi \n",
    "\n",
    "plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], 'r') Membuat garis linear regression\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d918170",
   "metadata": {
    "papermill": {
     "duration": 0.00358,
     "end_time": "2024-12-15T06:13:43.590193",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.586613",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "r2 = r2_score(y_test, y_pred): Menghitung R², yang berfungsi untuk menghitung keakuratan hasil prediksi model vs angka sebenarnya, akurasi dari model linear regresi kita adalah 72.14%"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "acf9f721",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-15T06:13:43.598963Z",
     "iopub.status.busy": "2024-12-15T06:13:43.598689Z",
     "iopub.status.idle": "2024-12-15T06:13:49.903279Z",
     "shell.execute_reply": "2024-12-15T06:13:49.902430Z"
    },
    "papermill": {
     "duration": 6.311198,
     "end_time": "2024-12-15T06:13:49.905146",
     "exception": false,
     "start_time": "2024-12-15T06:13:43.593948",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Random Forest Regressor\n",
    "rfr = RandomForestRegressor(random_state=42)\n",
    "rfr.fit(X_train, y_train)\n",
    "y_pred_rfr = rfr.predict(X_test)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "066a5b88",
   "metadata": {
    "papermill": {
     "duration": 0.003575,
     "end_time": "2024-12-15T06:13:49.912810",
     "exception": false,
     "start_time": "2024-12-15T06:13:49.909235",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "membuat model baru menggunakan randomforestregressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e4b0c65b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-15T06:13:49.921527Z",
     "iopub.status.busy": "2024-12-15T06:13:49.921211Z",
     "iopub.status.idle": "2024-12-15T06:13:49.927021Z",
     "shell.execute_reply": "2024-12-15T06:13:49.926069Z"
    },
    "papermill": {
     "duration": 0.012065,
     "end_time": "2024-12-15T06:13:49.928531",
     "exception": false,
     "start_time": "2024-12-15T06:13:49.916466",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random Forest R²: 0.8468588677444397\n"
     ]
    }
   ],
   "source": [
    "r2_random_forest = r2_score(y_test, y_pred_rfr)\n",
    "print(f\"Random Forest R²: {r2_random_forest}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55a69681",
   "metadata": {
    "papermill": {
     "duration": 0.003461,
     "end_time": "2024-12-15T06:13:49.936089",
     "exception": false,
     "start_time": "2024-12-15T06:13:49.932628",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "r2 = r2_score(y_test, y_pred): Menghitung R², yang berfungsi untuk menghitung keakuratan hasil prediksi model vs angka sebenarnya, akurasi dari model linear regresi kita adalah 84.68%, lebih baik dari model linear regresi kita yang hanya 72.14%."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e9ea01ab",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-12-15T06:13:49.944807Z",
     "iopub.status.busy": "2024-12-15T06:13:49.944523Z",
     "iopub.status.idle": "2024-12-15T06:13:50.285862Z",
     "shell.execute_reply": "2024-12-15T06:13:50.285061Z"
    },
    "papermill": {
     "duration": 0.347426,
     "end_time": "2024-12-15T06:13:50.287190",
     "exception": false,
     "start_time": "2024-12-15T06:13:49.939764",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.scatter(y_test, y_pred)\n",
    "plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], 'black') \n",
    "plt.title(\"Linear Regression\")\n",
    "plt.show()\n",
    "\n",
    "plt.scatter(y_test, y_pred_rfr)\n",
    "plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], 'r')\n",
    "plt.title(\"Random Forest Regression\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ba09772",
   "metadata": {
    "papermill": {
     "duration": 0.004623,
     "end_time": "2024-12-15T06:13:50.297699",
     "exception": false,
     "start_time": "2024-12-15T06:13:50.293076",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Evaluation and Conclusion\r\n",
    "\n",
    "Linear Regression:\n",
    "Model ini menghasilkan hubungan linear antara fitur dan target.\n",
    "Jika data memiliki pola yang tidak linear, performa Linear Regression cenderung kurang baik.\n",
    "Dari plotting, kita dapat melihat bahwa prediksi model mungkin kurang akurat untuk beberapa nilai outlier atau data yang tidak sesuai dengan pola linear.\n",
    "Akurasi model ini adalah R² = 72.14%, menunjukkan bahwa model mampu menjelaskan sebagian besar variabilitas data, tetapi masih ada ruang untuk perbaikan.\n",
    "\n",
    "Random Forest Regression:\n",
    "Model ini menggunakan metode berbasis \"Decision Tree\", sehingga lebih fleksibel saat menangani data yang memiliki lebih banyak variabel.\n",
    "Hasil plotting menunjukkan prediksi yang lebih baik dibandingkan Linear Regression, terutama untuk data dengan pola non-linear atau dengan outlier.\n",
    "Akurasi model ini R² = 84.68%, menunjukkan performa yang lebih unggul dalam menjelaskan variabilitas target dibandingkan Linear Regression.\n",
    "\n",
    "Kesimpulan:\n",
    "Random Forest Regression lebih baik digunakan jika data memiliki pola non-linear atau terdapat banyak outlier, karena model ini lebih mampu menangkap kerumitan data.\n",
    "Namun, jika data memiliki pola yang sederhana dan linear, Linear Regression dapat menjadi pilihan yang lebih efisien.\n",
    "Pemilihan model terbaik bergantung pada tujuan analisis dan karakteristik dataset yang digunakan."
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 6009496,
     "sourceId": 9851882,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30804,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 12.49779,
   "end_time": "2024-12-15T06:13:50.821673",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-12-15T06:13:38.323883",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
